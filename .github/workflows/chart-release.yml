name: Chart Release with Notes

on:
  push:
    paths:
      - 'charts/*/Chart.yaml'
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-charts: ${{ steps.list-changed.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Charts changed: $changed"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  release-with-notes:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed-charts == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --local user.email "duynhbot@users.noreply.github.com"
          git config --local user.name "Chart Release Bot"

      - name: Install Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.0

      - name: Generate Release Notes
        run: |
          mkdir -p .cr-release-notes
          
          for chart_dir in charts/*/; do
            chart_name=$(basename "$chart_dir")
            chart_file="$chart_dir/Chart.yaml"
            
            if [[ -f "$chart_file" ]]; then
              version=$(grep '^version:' "$chart_file" | awk '{print $2}')
              app_version=$(grep '^appVersion:' "$chart_file" | awk '{print $2}' | tr -d '"')
              description=$(grep '^description:' "$chart_file" | cut -d':' -f2- | sed 's/^ *//')
              
              cat > ".cr-release-notes/${chart_name}-${version}.md" << EOF
          # Release notes for ${chart_name} ${version}
          
          **Release date:** $(date '+%d %b %Y')
          **App version:** ${app_version}
          
          ## 🎉 What's New
          
          ${description}
          
          ## 📦 Installation
          
          ### Using Helm Repository
          \`\`\`bash
          helm repo add duyhenryer https://duyhenryer.github.io/charts/
          helm repo update
          helm install my-${chart_name} duyhenryer/${chart_name} --version ${version}
          \`\`\`
          
          ### Using OCI Registry
          \`\`\`bash
          helm install my-${chart_name} oci://ghcr.io/duyhenryer/charts/${chart_name} --version ${version}
          \`\`\`
          
          ## 🔧 Configuration
          
          See [values.yaml](https://github.com/duyhenryer/charts/blob/main/charts/${chart_name}/values.yaml) for configuration options.
          
          ## 📚 Documentation
          
          - [Chart README](https://github.com/duyhenryer/charts/tree/main/charts/${chart_name})
          - [Helm Documentation](https://helm.sh/docs/)
          
          ## 🐛 Issues & Support
          
          Report issues: [GitHub Issues](https://github.com/duyhenryer/charts/issues)
          
          ---
          
          **Chart Source**: https://github.com/duyhenryer/charts/tree/main/charts/${chart_name}
          EOF
            fi
          done

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          config: .github/configs/cr.yaml
          charts_dir: charts
          mark_as_latest: false
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NOTES_DIR: ".cr-release-notes"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GHCR
        run: |
          for chart_dir in charts/*/; do
            chart_name=$(basename "$chart_dir")
            if [[ -f "$chart_dir/Chart.yaml" ]]; then
              helm package "$chart_dir"
              package=$(ls ${chart_name}-*.tgz)
              helm push "$package" oci://ghcr.io/duyhenryer/charts
              rm "$package"
            fi
          done
